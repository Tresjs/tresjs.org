@import "tailwindcss";
@plugin "tailwind-scrollbar";

@import "@nuxt/ui-pro";

@theme static {
  --font-display: 'Manrope', sans-serif;
  --font-sans: 'Inter', sans-serif;
  --font-mono: 'Geist Mono', monospace;
  --breakpoint-3xl: 1920px;
  --ui-pattern-fg: color-mix(in oklab,var(--ui-text)5%,transparent);
  --ui-pattern-bg: repeating-linear-gradient(315deg,var(--ui-pattern-fg)0,var(--ui-pattern-fg)1px,transparent 0,transparent 50%);
  --ui-pattern-dot-fg: color-mix(in oklab, oklch(0.18 0.04 266.75) 5%, transparent);
  --ui-pattern-dot-bg: radial-gradient(var(--ui-pattern-dot-fg) 1px, transparent 0);
  --ui-header-height: 3rem;
  /* Technical blueprint styles */
  --ui-line-gap: 5px;
  --ui-line-width: 1px;
  --ui-line-offset: 172px;
  --ui-line-color: var(--color-gray-200);

  /* Teal Palette */
  --color-teal-50: #f2fbf8;
  --color-teal-100: #d3f4ea;
  --color-teal-200: #a6e9d6;
  --color-teal-300: #82dbc5;
  --color-teal-400: #44bda2;
  --color-teal-500: #2ba189;
  --color-teal-600: #20816f;
  --color-teal-700: #1d685b;
  --color-teal-800: #1c534b;
  --color-teal-900: #1b463f;
  --color-teal-950: #0a2925;

  /* Yellow/Brown Palette */
  --color-yellow-50: #fff8eb;
  --color-yellow-100: #feeac7;
  --color-yellow-200: #fdd48a;
  --color-yellow-300: #fbb03b;
  --color-yellow-400: #fa9e25;
  --color-yellow-500: #f47a0c;
  --color-yellow-600: #b85607;
  --color-yellow-700: #b3390a;
  --color-yellow-800: #922b0e;
  --color-yellow-900: #78250f;
  --color-yellow-950: #451003;
}

.scroll-gradient::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 30px; /* Adjust as needed */
  pointer-events: none;
  background: linear-gradient(to top, var(--ui-bg, #fff) 10%, transparent 100%);
  z-index: 10;
  transition: opacity 0.2s;
  opacity: 1;
}
.blog-gradient-after.hide-gradient::after {
  opacity: 0;
}

.dark {
  --ui-line-color: var(--color-gray-800);
}

.pattern-bg {
  background-image: var(--ui-pattern-bg);
  background-size: 10px 10px;
  background-attachment: fixed;
}

.noise-bg {
  background-image: url("data:image/svg+xml,%3C!-- svg: first layer --%3E%3Csvg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='4' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
}


.blueprint::before {
  content: "";
  position: absolute;
  top: 0;
  /* Mobile styles: simplified positioning */
  left: -32px;
  width: 100vw;
  height: 1px;
  background: linear-gradient(to right, var(--ui-line-color), var(--ui-line-color) 50%, transparent 0, transparent);
  background-size: var(--ui-line-gap) var(--ui-line-width);
  z-index: 1;
}

.pattern-dot-bg {
  background-image: var(--ui-pattern-dot-bg);
  background-size: 10px 10px;
  background-attachment: fixed;
}

.blueprint::after {
  content: "";
  position: absolute;
  bottom: 0;
  /* Mobile styles: simplified positioning */
  left: -32px;
  width: 100vw;
  height: 1px;
  background: linear-gradient(to right, var(--ui-line-color), var(--ui-line-color) 50%, transparent 0, transparent);
  background-size: var(--ui-line-gap) var(--ui-line-width);
}

.breakout {
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  width: 100vw;
  max-width: 100vw;
}

/* From mobile up (sm breakpoint and larger): use calculated values */
@media (min-width: 640px) {
  .blueprint::before {
    left: calc(var(--ui-line-offset) / 2 * -1);
    width: calc(100% + var(--ui-line-offset));
  }
  
  .blueprint::after {
    left: calc(var(--ui-line-offset) / 2 * -1);
    width: calc(100% + var(--ui-line-offset));
  }
}

